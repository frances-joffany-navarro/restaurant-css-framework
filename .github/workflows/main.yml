name: Update image to dockerhub and run a new instance

on:
  push:
    branches: 
      - "main" 

jobs:
  update_image:
  
    runs-on: ubuntu-latest

    steps:
    - name: Clone frances-joffany-navarro/upskill-devops
      uses: actions/checkout@v4
      with:
        repository: 'frances-joffany-navarro/upskill-devops'
        path: upskill-devops

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        context: ./upskill-devops/my-docker-compose/apache
        file: ./upskill-devops/my-docker-compose/apache/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/upskill-devops:webserver

  deploy-ansible:

    runs-on: ubuntu-latest
    needs: update_image
    steps:
    
    - name: Clone frances-joffany-navarro/upskill-devops
      uses: actions/checkout@v4
      with:
        repository: 'frances-joffany-navarro/upskill-devops'
        path: upskill-devops
    
    - name: list and install petname
      run: |
        ansible-galaxy collection list
        pip install xkcdpass

    - name: Run playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        # Required, playbook filepath
        playbook: playbook.yaml
        directory: ./upskill-devops/ansible-automation/automate-deployment
        configuration: |
          [ssh_connection]
          retries = 10        
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        inventory: |
          [local]
          localhost
          
          [aws_host]
          
          [aws_host:vars]
          ansible_user=ubuntu

        options: |
          --extra-vars "ssh_public_key=${{secrets.SSH_PUBLIC_KEY}} aws_access_key=${{secrets.AWS_ACCESS_KEY}} aws_secret_key=${{secrets.AWS_SECRET_KEY}} docker_username=${{secrets.DOCKERHUB_USERNAME}} docker_token=${{ secrets.DOCKERHUB_TOKEN }}"
          -vvvvvv
